#summary How to build MacVim
#labels Featured,Phase-Implementation

=Building !MacVim from the Git repository=

==Summary==

If you know what you are doing, then this should be enough to get you going:
  * Clone the !MacVim.git repo: `git clone git://repo.or.cz/MacVim.git vim7`
  * Configure and build Vim: `cd vim7/src; ./configure; make`
  * Run: `open MacVim/build/Release/MacVim.app`
The `configure` script takes parameters that enable extra features, see the section on "Enabling extra features" below for more information.


==Downloading and building==

To get the source code you need Git, see below for installation instructions if you have not installed Git already. (Note that it is possible to get the source code without installing Git but it will be much easier to keep your local copy of the source code up to date once you have installed Git.  See the comment at the end of this page on how to download the source code without using Git.)

Once you have Git installed you first have to clone the !MacVim.git repo, so open up Terminal and type the following commands:
{{{
localhost:~ user$ git clone git://repo.or.cz/MacVim.git vim7
}}}
This will create a folder named `vim7` and populate it with all the source code
needed to build !MacVim (you can choose any name you want instead of `vim7`).

Next, you have to configure Vim to include the !MacVim specific code (see the next section on how to enable extra features) and then build it
{{{
localhost:~ user$ cd vim7/src
localhost:~/vim7/src user$ ./configure
localhost:~/vim7/src user$ make
}}}
After `make` finishes you can find !MacVim.app in the `MacVim/build/Release/` folder; try to run it by typing
{{{
localhost:~/vim7/src user$ open MacVim/build/Release/MacVim.app
}}}

Once you are satisfied with the build, simply drag and drop !MacVim.app into the `/Applications` folder (this is the preferred location, but it can be run from any folder).


==Enabling extra features==

These are the parameters to `configure` you are most likely to want to enable:

  * All standard features: `--with-features=huge`
  * Cscope support: `--enable-cscope`
  * Python interpreter: `--enable-pythoninterp`
  * Ruby interpreter: `--enable-rubyinterp`
  * Perl interpreter: `--enable-perlinterp`
  * Universal binary: `--with-macarchs=ARCHS` (`ARCHS=x86_64,i386,ppc,..`, one or more items in quotation marks separated by spaces)
  * Mac OS X SDK version: `--with-macsdk=VER` (`VER=10.4,10.5,10.6,..`)

As an example, say you are on OS X 10.6 and want to build a 32 bit binary (64 bit is the default on 10.6) with the "usual" features, and Python support.  Then call `configure` like this:
{{{
localhost:~/vim7/src user$ ./configure --with-macarchs=i386 --with-features=huge --enable-pythoninterp
}}}

To see the list of all parameters, type `./configure --help` (note that not all parameters in that list apply to Mac OS X).


==Updating an existing Git repository==

If you already have the !MacVim.git repo then updating it is as easy as
{{{
localhost:~ user$ cd vim7
localhost:~/vim7 user$ git pull
}}}


==Contributing with patches==

See the wiki page on [Contributing].


=Installing Git=

==Using the installer==

A prebuilt binary of Git for Mac OS X can be found [http://code.google.com/p/git-osx-installer/ here].

==Using !MacPorts==

Note! If you do not already have !MacPorts installed then be warned that installing both !MacPorts and Git will take a _long_ time.

If you already have !MacPorts installed, then you can install Git by opening a Terminal window and
typing
{{{
localhost:~ user$ sudo port install git-core +svn
}}}
(The `+svn` flag is not strictly necessary, but if you might ever need to use the `git-svn` command in the future it is best to include it.)

==From the Git source code==

The source code for Git can be downloaded from http://git-scm.com.


=Using the ASL logging system=

There are four different filters controlling what gets logged or not
  * The ASL database filter
  * The ASL master filter
  * The ASL per-process filter
  * The local (!MacVim-) filter
By default Debug and Info level messages are blocked.  If you are developing you'll likely want to see all logs from time to time.  In order to do this you must first change the local filter and this is done by setting the user default MMLogLevel.  For example
{{{
localhost:~ user$ defaults write org.vim.MacVim MMLogLevel 7
}}}
will enable all log messages past the local filter (requires a restart of !MacVim).  ASL will still block them however since the database filter blocks Debug and Info level messages as well.  To change this use the `syslog` command:
{{{
localhost:~ user$ sudo syslog -c syslogd -d
}}}
Now you'll be able to see all logs from !MacVim in Console.app, or by using `syslog`:
{{{
localhost:~ user$ syslog -w | grep Vim
}}}
When you are done debugging you can reset the database filter as follows:
{{{
localhost:~ user$ sudo syslog -c syslogd off
}}}

It is also possible to have !MacVim log to stderr as follows:
{{{
localhost:~ user$ defaults write org.vim.MacVim MMLogToStdErr 1
}}}
This requires a restart of !MacVim.  To disable substitute the 1 for a 0.  Note that getting the logs to appear on stderr does not require that you change the database filter as described above.

A tip: instead of using `defaults` to change MMLogLevel and MMLogToStdErr you can pass these as command line options to the `MacVim` binary (inside the app bundle) as follows:
{{{
localhost:~ user$ ./MacVim.app/Contents/MacOS/MacVim -MMLogLevel 7 -MMLogToStdErr 1
}}}

The levels passed to MMLogLevel are the same as are used by ASL, see `man syslog` for a complete list (5 is the default level).




=Random notes=

  * The document icons require the Envy Code R font to be installed in `src/MacVim/icons`.  This font is fetched automatically the first time you build !MacVim.  You can also download it manually from `http://download.damieng.com/latest/EnvyCodeR`
  * At the moment the Vim runtime files are not updated inside the app bundle if they are modified.  If you modify any runtime files, then you have to clean the !MacVim project and build it again.
  * To build with Ruby support on OS X 10.4 (Tiger), you may get an error from `configure` saying that the Ruby header files cannot be found.  If you run into this problem, open up Terminal and type
{{{
cd /usr/lib/ruby/1.8/powerpc-darwin8.0
sudo ln -s ../universal-darwin8.0/*.h ./
}}}


=Building !MacVim from the Subversion repository=

The subversion repository has been deprecated, please use Git to download and build !MacVim.